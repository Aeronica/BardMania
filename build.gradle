buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the nessasary things for Forge to be setup.

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

repositories {
    maven { url = "https://mrcrayfish.com/maven" }
}


version = version_major + '.' + version_minor + '.' + version_patch
if (project.hasProperty('buildQualifier')) {
    version = project.version + '-' + project.buildQualifier
}
group = "net.aeronica.mods.bard_mania"
archivesBaseName = "bard-mania_" + mcversion

minecraft {
    version = mcversion + "-" + forgeversion
    runDir = "run"
	mappings = mcp_mappings
    
	replaceIn "net/aeronica/mods/bard_mania/Reference.java"
    replace '@VERSION@', project.version
}

dependencies {
    // compile "com.mrcrayfish:obfuscate:0.2.3-1.12.2"
	compile files ("lib/obfuscate-0.2.4-1.12.2.jar")
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task signJar(type: SignJar, dependsOn: reobfJar) {
    onlyIf {
        project.hasProperty("keyStore")
    }

    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('keyStoreAlias')
    storePass = project.findProperty('keyStorePass')
    keyPass = project.findProperty('keyStoreKeyPass')
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

build.dependsOn signJar